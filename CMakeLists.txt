cmake_minimum_required(VERSION 3.6)

project(bcgl_lib)

set(CMAKE_C_STANDARD 99)

add_definitions("-D SUPPORT_PAR_SHAPES")

if(ANDROID)
    message("=== ANDROID toolchain ===")
    add_definitions(-D SUPPORT_GLES)
    add_definitions(-D SUPPORT_GLSL)
    include_directories(${ANDROID_SYSROOT}/usr/include/arm-linux-androideabi)
    set(LIBS EGL GLESv2 android log m)
elseif(EMSCRIPTEN)
    message("=== EMSCRIPTEN toolchain ===")
    add_definitions(-D SUPPORT_GLES)
    add_definitions(-D SUPPORT_GLSL)
    set(LIBS GL m dl pthread)
elseif(MINGW)
    message("=== MINGW toolchain ===")
    add_definitions(-D SUPPORT_GLAD)
    add_definitions(-D SUPPORT_GLSL)
    set(LIBS glfw3 winmm gdi32 glu32 opengl32 wldap32 ws2_32 pthread)
elseif(UNIX)
    message("=== UNIX toolchain ===")
    add_definitions(-D SUPPORT_GLAD)
    add_definitions(-D SUPPORT_GLSL)
    set(LIBS glfw GL m dl pthread)
else()
    message(FATAL_ERROR "Unsupported toolchain!")
endif()

file(GLOB SRCS src/*.c)

if(ANDROID)
    list(APPEND SRCS src/port/bcgl_app_android.c)
    list(APPEND SRCS src/port/bcgl_window_egl.c)
elseif(EMSCRIPTEN)
    list(APPEND SRCS src/port/bcgl_app_web.c)
    list(APPEND SRCS src/port/bcgl_window_egl.c)
else()
    list(APPEND SRCS src/port/bcgl_app_glfw.c)
    list(APPEND SRCS external/glad/src/glad.c)
endif()

add_library(bcgl_lib STATIC ${SRCS})

target_include_directories(bcgl_lib PUBLIC include external external/glad/include)

target_link_libraries(bcgl_lib ${LIBS})
